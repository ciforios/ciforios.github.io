---
layout:     post
title:      "Setting up Gerrit"
subtitle:   "How to"
date:       2015-05-30 12:35:33
author:     "The crew"
header-img: "img/post-bg-03.jpg"
tags: [gerrit]
---

##Setting up Gerrit

Setup:
download gerrit.war from [Official Gerrit page](code.google.com/p/gerrit)

execute 
{% highlight bash %}
java -jar gerrit.war init -d path/to/site/folder
{% endhighlight %}

This will start the initialisation dialog

{% highlight bash %}
bash-3.2$ java -jar /Applications/Gerrit/gerrit-2.11.war init -d badgeme
Using secure store: com.google.gerrit.server.securestore.DefaultSecureStore

*** Gerrit Code Review 2.11
*** 

Create '/Users/gerrit/Documents/gerrit/badgeme' [Y/n]? 

*** Git Repositories
*** 

Location of Git repositories   [git]: 

*** SQL Database
*** 

Database server type           [h2]: 

*** Index
*** 

Type                           [LUCENE/?]: 

*** User Authentication
*** 

Authentication method          [OPENID/?]: 

*** Review Labels
*** 

Install Verified label         [y/N]? 

*** Email Delivery
*** 

SMTP server hostname           [localhost]: 
SMTP server port               [(default)]: 
SMTP encryption                [NONE/?]: 
SMTP username                  : 

*** Container Process
*** 

Run as                         [gerrit]: 
Java runtime                   [/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre]: 
Copy gerrit-2.11.war to /Users/gerrit/Documents/gerrit/badgeme/bin/gerrit.war [Y/n]? 
Copying gerrit-2.11.war to /Users/gerrit/Documents/gerrit/badgeme/bin/gerrit.war

*** SSH Daemon
*** 

Listen on address              [*]: 
Listen on port                 [29418]: 

Gerrit Code Review is not shipped with Bouncy Castle Crypto SSL v151
  If available, Gerrit can take advantage of features
  in the library, but will also function without it.
Download and install it now [Y/n]? n
Generating SSH host key ... rsa(simple)... done

*** HTTP Daemon
*** 

Behind reverse proxy           [y/N]? 
Use SSL (https://)             [y/N]? 
Listen on address              [*]: 
Listen on port                 [8080]: 8081
Canonical URL                  [http://mrs.mmlab.mintern.mi.hdm-stuttgart.de:8081/]: 

*** Plugins
*** 

Installing plugins.
Install plugin download-commands version v2.11 [y/N]? 
Install plugin reviewnotes version v2.11 [y/N]? 
Install plugin singleusergroup version v2.11 [y/N]? 
Install plugin replication version v2.11 [y/N]? 
Install plugin commit-message-length-validator version v2.11 [y/N]? 
Initializing plugins.
No plugins found with init steps.

Initialized /Users/gerrit/Documents/gerrit/badgeme
Executing /Users/gerrit/Documents/gerrit/badgeme/bin/gerrit.sh start
Starting Gerrit Code Review: OK
Waiting for server on mrs.mmlab.mintern.mi.hdm-stuttgart.de:8081 ... OK
Opening http://mrs.mmlab.mintern.mi.hdm-stuttgart.de:8081/#/admin/projects/ ...OK
{% endhighlight %}

Open the URL in your browser and log in.

Login:
Default is OpenID.

Problem: Only YahooID and LaunchpadID are available (no more Google support)

Alternatives: Ldap, but needs ldap server

> First person who logs in is automatically turned into admin account.
> Admin can distribute rights to other users.

Permissions:
Projects -> Access
Can be set for groups, Project Owners, Admins and Registered Users.
Permissions include: Who is allowed to Read, Push, Submit changes. 
In addition it can be defined, how much influence certain groups should have over the reviewing process.
Permitted users can create Projects.


Creating Project:
Projects -> Create Project

Enter a project name
Choose the Rights to inherit from
<&lt;create project&gt;>

In the Project options page you can see the URL to use for cloning the git repository.


Deleting Projects:
Not possible over web interface.
Requires external plugin 

Git:
Each project has a unique git url to clone/push to

### Access
Pushing is prohibited<br>
Patch Sets need +2 "Code-Review" and +1 "Verified"

### Pushing commits to gerrit for reviewing
To create reviews:
Install git-review on your mac (for installation on other operating systems see: http://www.mediawiki.org/wiki/Gerrit/git-review)
```bash
brew install git-review
```

Rename the remote path of your gerrit folder to gerrit:
```bash
git remote rename origin gerrit
```

//Do your changes<br/>
//commit your changes<br/>
Push your changes to gerrit with git review. You can find the account information you have to enter after entering the following command, in your gerrit profile -> http login
```bash
git review [BRANCH]
```

###Gerrit and Branches
The branch to push to can be specified when submitting reviews.<br/>
Branches can be created using the Gerrit UI under Projects -> List -> [PROJECT_NAME] -> Branches
If you create e.g. a dev branch and want to point it to the current Revision of the branch with the name "master" just enter "master" in the Revision field.

## Gerrit Trigger
The Jenkins Plugin "Gerrit Trigger" expects Gerrit to have the label "Verified" set, which is not by default included in the gerrit config.
The gerrit label can be added in:
Projects -> List -> All Projects -> General -> Edit Config
After adding the Verified Label, it is also necessary to add the permissions for groups to change the verified status of a review.
Projects -> List -> All Projects -> Access -> Edit
Under the point "Reference: refs/heads/*" hit "Add Permission" and choose "Label Verified". Then add the groups that should be allowed to change the verified state. E.g. Admins and Non-Interactive Users (the group containing Jenkins).

Further info on Gerrit labels see: https://gerrit-review.googlesource.com/Documentation/config-labels.html
Regarding the Gerrit Trigger "bug" see: https://code.google.com/p/gerrit/issues/detail?id=1963