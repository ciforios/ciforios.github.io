---
layout:     post
title:      "Continuous Integration with Jenkins"
subtitle:   "Setting things up and running"
date:       2015-04-21 12:00:00
author:     "The Crew"
header-img: "img/post-bg-06.jpg"
tags: [continuous-integration]
---

<img style="float:left" src="{{ site.url }}/img/jenkins/jenkinsLogo.png" />
Within this page we will describe how we set up Jenkins on our server to meet our requirements. We choose Jenkins because it's the common used CI software. We were considering to use XCode Server from Apple as a CI but due to the restrictions to Apple we were rejecting this idea. 


###Setup
Download the latest Jenkins war file from the offical [Jenkins homepage](http://jenkins-ci.org/). 
On our server machine we moved the war file into the applications folder and created there a separated Jenkins folder but this can be handled by everyone individually.<br>
Open the terminal and start Jenkins with  
{% highlight bash %}
	java -jar /Applications/Jenkins/jenkins.war &
{% endhighlight %}
The link to the war files depends where you saved it locally. After firing up the command you might face some error if you don't have at least Java Version 7 installed.<br>
To upgrade to the latest Java Version you need to do following steps:<br>
1. Get the latest Java Version from [Oracle](https://www.java.com/de/download/mac_download.jsp). Once you run the installer it will install Java inside the ```/Library/Internet Plug-Ins/JavaAppletPlugin.plugin``` directory. But it doesn't overwrite ```/usr/bin/java``` which is the default directory used by Apple. You can check your version by typing in ```java -version ```<br>
2. In order to change the version to the just installed one run following commands:
{% highlight bash %}
	sudo rm /usr/bin/java
{% endhighlight %}
This command will remove the old symbol link which points to ```/System/Library/Frameworks/JavaVM.framework/Versions/A/Commands/java``` (That's Apple's 1.6 Java Version). Now you need to set a new symbolic link to the new Java version. 
{% highlight bash %}
	sudo ln -s /Library/Internet\ Plug-Ins/JavaAppletPlugin.plugin/Contents/Home/bin/java /usr/bin
{% endhighlight %}

After that you should be able to successfully start Jenkins via the command
{% highlight bash %}
	java -jar /Applications/Jenkins/jenkins.war &
{% endhighlight %}
Once done and you don't see any further error messages in the terminal you can reach Jenkins via the Webfrontend [http://localhost:8080/](http://localhost:8080/) and it should look like below.

![image](/img/jenkins/jenkins_overview.png)

<br>
### Make everything a little secure
By default no authentication is required at all. You should activate the security settings though, because Jenkins is usually reachable over the network and without this security feature it is easily accessable.<br>
In our case the following changes have been made under ```Manage Jenkins->Configure Global Security->Enable Security:```<br>
Here we activated ```Jenkins own user database``` under the section```Security Realm```, which allow users to signup. We left the Authorization field as it is on ```Logged-in users can do anything```.<br>
>Note: If you don't add security realm it will cause an error "/j_acegi_security_check".

Once you finished everything you shouldn't forget to save all your changes.

<br>
###Install Plugins to make your life easier
There is a multitude of Plugins for Jenkins. For our purposes we came to the conclusion that we need following Plugins:


* [Slack Plugin](https://wiki.jenkins-ci.org/display/JENKINS/Slack+Plugin)

***
* [GIT Plugin](https://wiki.jenkins-ci.org/display/JENKINS/Git+Plugin)

***
* [Gerrit Trigger](https://wiki.jenkins-ci.org/display/JENKINS/Gerrit+Trigger)

***
* [XCode Integration](https://wiki.jenkins-ci.org/display/JENKINS/Xcode+Plugin)


You can install those Plugins under "Manage Jenkins" -> "Manage Plugins". In this overview table select the tab "Available". Then you can choose the Plugin which you want to install and click on the button "Download now and install after restart".

####Configuring Gerrit Trigger
Configure Plugin in Manage Jenkins->Gerrit Trigger<br>
Add new server
Frontend URL: http://192.168.8.10:8081/
SSH Port: 29418
Username: jenkins (Need to be added to Gerrit as a new user with admin rights)
       Using old hdm account from yannik with badgme1
SSH Keyfile and password. Generated ssh file for Jenkins

###Jobs
For creating a new job, select new item on the left side. 

####Build and test job


####Build and upload to master branch job